import os

def run_docker_with_cmd(run_cmd,args):
    print(f"Creating {args.name} instance")
    options = ""
    options += " --rm "
    if args.it:
        options += " -it "
    options += " --gpus all"
    optical_volume = os.path.abspath(os.path.join(os.path.dirname(__file__), os.pardir))
    cmd= f"docker run --name {args.name} {options} \
            -v {optical_volume}:/root/optical/ \
            -v {os.path.abspath(args.dataset_path)}:/Datasets somidi/tf:v2 \
            /usr/bin/zsh -c \'{run_cmd}\'"
    print(cmd)
    if not args.dry_run:
        os.system(cmd)

def create_common_parser(parser):
    parser.add_argument( "--rm",action='store_true',help="remove container on exit")
    parser.add_argument( "--it",action='store_true',help="interactive mode")
    parser.add_argument( "--name",default="optical",help="name of the container,default:optical")
    parser.add_argument( "--display",action='store_true',help="to attach display to this container")
    parser.add_argument( "--gpu",action='store_true',help="to attach to gpu")
    parser.add_argument( "--dry_run",action='store_true',help="to dry_run the commands generated by this script")
    parser.add_argument( "--dataset", default="sintel", help="dataset to use")
    parser.add_argument( "--dataset_path",default="/home/ramu/Personal/Datasets/",help="dataset path")